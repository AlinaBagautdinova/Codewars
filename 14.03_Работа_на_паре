1. If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. 
   Finish the solution so that it returns the sum of all the multiples of 3 or 5 below the number passed in. Additionally, if the number is negative, return 0 (for languages that do have them).
   Note: If the number is a multiple of both 3 and 5, only count it once.  
   (6kyu)
   
public class Solution {
  public int solution(int number) {
    int sum = 0;
    if (number < 0) return 0;
    else {
      for (int i = 0; i < number; i++) {
      if (i % 3 == 0 || i % 5 == 0) {
        sum = sum + i;
      }
      } 
    return sum;
    }
  }
}


2. Given two integers a and b, which can be positive or negative, find the sum of all the integers between and including them and return it. 
   If the two numbers are equal return a or b.
   Note: a and b are not ordered!
   (-1, 2) --> 2 (-1 + 0 + 1 + 2 = 2)
   (1, 0) --> 1 (1 + 0 = 1)  
   (7kyu)
   
 public class Sum {
     public int GetSum(int a, int b) {
       int sum = 0;
       if (a == b) sum = a;
       if (a < b) {
         for (int i = a; i <= b; i++)  {
           sum = sum + i;
         }
       }
       if (b < a) {
         for (int i = b; i <= a; i++)  {
           sum = sum + i;
         }
       }
       return sum;
     }
    }
    
    
3. In mathematics, the factorial of a non-negative integer n, denoted by n!, is the product of all positive integers less than or equal to n. 
   For example: 5! = 5 * 4 * 3 * 2 * 1 = 120. By convention the value of 0! is 1.
   (7kyu)
   
public class Factorial {
  public int factorial(int n) {
    int product = 1;
    for (int i = 1; i <= n; i++) {
      product = product*i;
    }
    return product;
  }
}
   
